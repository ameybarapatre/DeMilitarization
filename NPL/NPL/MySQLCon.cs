//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using MySql.Data.MySqlClient;
using System.Data;
using System.Threading;
using System.Runtime;
using Gtk;
using System.Collections;
namespace NPL		
{
	public class MySQLCon
	{  	

		public static ArrayList ips = new ArrayList ();
		private String query;
		private MainWindow m;
		ThreadNotify n , i , d ,f;
		public MySQLCon (String Q , MainWindow main)
		{
			query = Q;
			m = main;
			n = new ThreadNotify (new ReadyEvent (m.SQLResults));
			i = new ThreadNotify (new ReadyEvent (m.ConnectedIP));
			d = new ThreadNotify (new ReadyEvent (m.Disconnect));
		
		} 

		


		public void GetIP()
		{
			Thread sql = new Thread (new ThreadStart (execute_ip));
			sql.Start ();
		}
		private void execute_ip()
		{ 	 ips.Clear ();
			string connectionString =
				"Server=localhost;" +
					"Database=NPL;" +
					"User ID=root;" +
					"Password=;" +
					"Pooling=false";
			IDbConnection dbcon;
			dbcon = new MySqlConnection(connectionString);
			dbcon.Open();
			IDbCommand dbcmd = dbcon.CreateCommand();
			dbcmd.CommandText = "SELECT * FROM `npl_ip`";
			IDataReader reader = dbcmd.ExecuteReader();
			while(reader.Read()) {
				String userip = (String)reader["ip"];
				ips.Add(userip);
			}
			// clean up
			reader.Close();
			reader = null;
			dbcmd.Dispose();
			dbcmd = null;
			dbcon.Close();
			dbcon = null;
			i.WakeupMain ();
			
			
		}
		public void authenticate()
		{
			Thread sql = new Thread (new ThreadStart (execute_query));
			
			sql.Start ();
		}

		private void execute_query()
		{ 	 
		   string connectionString =
	          "Server=localhost;" +
	          "Database=NPL;" +
			  "User ID=root;" +
	          "Password=;" +
	          "Pooling=false";
	       IDbConnection dbcon;
	       dbcon = new MySqlConnection(connectionString);
	       dbcon.Open();
	       IDbCommand dbcmd = dbcon.CreateCommand();
	       dbcmd.CommandText = query;
	       IDataReader reader = dbcmd.ExecuteReader();
	       while(reader.Read()) {
	           int userid = (int) reader["id"];
				MainWindow.uid=userid;
	       }
	       // clean up
	       reader.Close();
	       reader = null;
	       dbcmd.Dispose();
	       dbcmd = null;
	       dbcon.Close();
	       dbcon = null;
			n.WakeupMain ();


		}

		public void remove(String d)
		{	query = d;
			Thread sql = new Thread (new ThreadStart (execute_remove));
			
			sql.Start ();
		}
		
		private void execute_remove()
		{ 	 
			string connectionString =
				"Server=localhost;" +
					"Database=NPL;" +
					"User ID=root;" +
					"Password=;" +
					"Pooling=false";
			IDbConnection dbcon;
			dbcon = new MySqlConnection(connectionString);
			dbcon.Open();
			IDbCommand dbcmd = dbcon.CreateCommand();
			dbcmd.CommandText = query;
			IDataReader reader = dbcmd.ExecuteReader();

			// clean up
			reader.Close();
			reader = null;
			dbcmd.Dispose();
			dbcmd = null;
			dbcon.Close();
			dbcon = null;
			d.WakeupMain ();
			
			
		}
 

	}
}

